{"version":3,"names":["Calendar","props","locale","mode","onChange","startDate","endDate","date","disableWeekDays","startYear","endYear","dates","validRange","dateMode","theme","useTheme","selectColor","useMemo","dark","darkenBy","Color","colors","primary","hex","lightenBy","scrollMode","selectedYear","setSelectedYear","React","useState","undefined","selectingYear","setSelectingYear","onPressYear","useCallback","year","prev","startDateRef","useLatest","endDateRef","onChangeRef","datesRef","onPressDate","d","current","getEndOfDay","sd","ed","isStart","dateToUnix","exists","some","areDatesOnSameDay","newDates","filter","sort","a","b","getTime","datePressed","change","firstDate","styles","root","getInitialIndex","index","roundness","onPrev","onNext","StyleSheet","create","flex","viewPager","memo"],"sources":["Calendar.tsx"],"sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport Swiper from './Swiper'\nimport Month from './Month'\nimport {\n  areDatesOnSameDay,\n  dateToUnix,\n  DisableWeekDaysType,\n  getEndOfDay,\n  getInitialIndex,\n} from './dateUtils'\n\nimport CalendarHeader from './CalendarHeader'\nimport { useCallback, useMemo } from 'react'\nimport YearPicker from './YearPicker'\nimport Color from 'color'\nimport { useTheme } from 'react-native-paper'\nimport { useLatest, lightenBy, darkenBy } from '../utils'\n\nexport type ModeType = 'single' | 'range' | 'multiple'\n\nexport type ScrollModeType = 'horizontal' | 'vertical'\n\nexport type ValidRangeType = {\n  startDate?: Date\n  endDate?: Date\n  disabledDates?: Date[]\n}\n\nexport type BaseCalendarProps = {\n  locale: string\n  disableWeekDays?: DisableWeekDaysType\n  validRange?: ValidRangeType\n  startYear?: number\n  endYear?: number\n\n  // here they are optional but in final implemenation they are required\n  date?: CalendarDate\n  dates?: CalendarDates\n  startDate?: CalendarDate\n  endDate?: CalendarDate\n  dateMode?: 'start' | 'end'\n}\n\nexport type CalendarDate = Date | undefined\nexport type CalendarDates = Date[] | undefined | null\n\nexport type RangeChange = (params: {\n  startDate: CalendarDate\n  endDate: CalendarDate\n}) => any\n\nexport type SingleChange = (params: { date: CalendarDate }) => void\n\nexport type MultiChange = (params: {\n  dates: CalendarDates\n  datePressed: Date\n  change: 'added' | 'removed'\n}) => any\n\nexport type MultiConfirm = (params: { dates: Date[] }) => void\n\nexport interface CalendarSingleProps extends BaseCalendarProps {\n  mode: 'single'\n  date: CalendarDate\n  onChange: SingleChange\n}\n\nexport interface CalendarRangeProps extends BaseCalendarProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n  onChange: RangeChange\n}\n\nexport interface CalendarMultiProps extends BaseCalendarProps {\n  mode: 'multiple'\n  dates: CalendarDates\n  onChange: MultiChange\n}\n\nfunction Calendar(\n  props: CalendarSingleProps | CalendarRangeProps | CalendarMultiProps\n) {\n  const {\n    locale,\n    mode,\n    onChange,\n    startDate,\n    endDate,\n    date,\n    disableWeekDays,\n    startYear,\n    endYear,\n    dates,\n    validRange,\n    dateMode,\n  } = props\n\n  const theme = useTheme()\n\n  const selectColor = useMemo<string>(() => {\n    if (theme.dark) {\n      return darkenBy(Color(theme.colors.primary), 0.9).hex()\n    }\n    return lightenBy(Color(theme.colors.primary), 0.9).hex()\n  }, [theme])\n\n  const scrollMode =\n    mode === 'range' || mode === 'multiple' ? 'vertical' : 'horizontal'\n\n  const [selectedYear, setSelectedYear] = React.useState<number | undefined>(\n    undefined\n  )\n  const [selectingYear, setSelectingYear] = React.useState<boolean>(false)\n  const onPressYear = useCallback(\n    (year: number) => {\n      setSelectedYear(year)\n      setSelectingYear((prev) => !prev)\n    },\n    [setSelectingYear]\n  )\n\n  // prevent re-rendering all months when something changed we only need the\n  // latest version of the props and we don't want the useCallback to change\n  const startDateRef = useLatest<CalendarDate>(startDate)\n  const endDateRef = useLatest<CalendarDate>(endDate)\n  const onChangeRef = useLatest<RangeChange | SingleChange | MultiChange>(\n    onChange\n  )\n  const datesRef = useLatest<CalendarDates>(dates)\n\n  const onPressDate = useCallback(\n    (d: Date) => {\n      if (mode === 'single') {\n        ;(onChangeRef.current as SingleChange)({\n          date: dateMode === 'start' ? d : getEndOfDay(d),\n        })\n      } else if (mode === 'range') {\n        const sd = startDateRef.current\n        const ed = endDateRef.current\n        let isStart: boolean = true\n        if (sd && !ed && dateToUnix(d) >= dateToUnix(sd!)) {\n          isStart = false\n        }\n        ;(onChangeRef.current as RangeChange)({\n          startDate: isStart ? d : sd,\n          endDate: !isStart ? getEndOfDay(d) : undefined,\n        })\n      } else if (mode === 'multiple') {\n        datesRef.current = datesRef.current || []\n        const exists = datesRef.current.some((ed) => areDatesOnSameDay(ed, d))\n\n        const newDates = exists\n          ? datesRef.current.filter((ed) => !areDatesOnSameDay(ed, d))\n          : [...datesRef.current, d]\n\n        newDates.sort((a, b) => a.getTime() - b.getTime())\n        ;(onChangeRef.current as MultiChange)({\n          dates: newDates,\n          datePressed: d,\n          change: exists ? 'removed' : 'added',\n        })\n      }\n    },\n    [mode, dateMode, onChangeRef, startDateRef, endDateRef, datesRef]\n  )\n\n  const firstDate = startDate || date || dates?.[0]\n\n  return (\n    <View style={styles.root}>\n      <Swiper\n        initialIndex={getInitialIndex(firstDate)}\n        selectedYear={selectedYear}\n        scrollMode={scrollMode}\n        renderItem={({ index }) => (\n          <Month\n            locale={locale}\n            mode={mode}\n            key={index}\n            validRange={validRange}\n            index={index}\n            startDate={startDate}\n            endDate={endDate}\n            date={date}\n            dates={dates}\n            onPressYear={onPressYear}\n            selectingYear={selectingYear}\n            onPressDate={onPressDate}\n            scrollMode={scrollMode}\n            primaryColor={theme.colors.primary}\n            selectColor={selectColor}\n            roundness={theme.roundness}\n            disableWeekDays={disableWeekDays}\n          />\n        )}\n        renderHeader={({ onPrev, onNext }) => (\n          <CalendarHeader\n            locale={locale}\n            onPrev={onPrev}\n            onNext={onNext}\n            scrollMode={scrollMode}\n            disableWeekDays={disableWeekDays}\n          />\n        )}\n      />\n      {scrollMode === 'horizontal' ? (\n        <YearPicker\n          selectedYear={selectedYear}\n          selectingYear={selectingYear}\n          onPressYear={onPressYear}\n          startYear={startYear || 1800}\n          endYear={endYear || 2200}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { flex: 1 },\n  viewPager: { flex: 1 },\n})\n\nexport default React.memo(Calendar)\n"],"mappings":"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"}